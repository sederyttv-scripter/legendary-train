repeat task.wait() until game:IsLoaded()

-- Variables
local ForsakenReachEnabled = false
local ReachDistance = 120
local RNG = Random.new()

-- Player references
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local Character, Humanoid, HumanoidRootPart  

local function updateCharacterRefs(char)
    Character = char
    Humanoid = Character:WaitForChild("Humanoid")
    HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
end  

if Player.Character then
    updateCharacterRefs(Player.Character)
end
Player.CharacterAdded:Connect(updateCharacterRefs)

-- Animation IDs
local AttackAnimations = {
    'rbxassetid://131430497821198','rbxassetid://83829782357897','rbxassetid://126830014841198',
    'rbxassetid://126355327951215','rbxassetid://121086746534252','rbxassetid://105458270463374',
    'rbxassetid://127172483138092','rbxassetid://18885919947','rbxassetid://18885909645',
    'rbxassetid://87259391926321','rbxassetid://106014898528300','rbxassetid://86545133269813',
    'rbxassetid://89448354637442','rbxassetid://90499469533503','rbxassetid://116618003477002',
    'rbxassetid://106086955212611','rbxassetid://107640065977686','rbxassetid://77124578197357',
    'rbxassetid://101771617803133','rbxassetid://134958187822107','rbxassetid://111313169447787',
    'rbxassetid://71685573690338','rbxassetid://129843313690921','rbxassetid://97623143664485',
    'rbxassetid://136007065400978','rbxassetid://86096387000557','rbxassetid://108807732150251',
    'rbxassetid://138040001965654','rbxassetid://73502073176819','rbxassetid://86709774283672',
    'rbxassetid://140703210927645','rbxassetid://96173857867228','rbxassetid://121255898612475',
    'rbxassetid://98031287364865','rbxassetid://119462383658044','rbxassetid://77448521277146',
    'rbxassetid://103741352379819','rbxassetid://131696603025265','rbxassetid://122503338277352',
    'rbxassetid://97648548303678','rbxassetid://94162446513587','rbxassetid://84426150435898',
    'rbxassetid://93069721274110','rbxassetid://114620047310688','rbxassetid://97433060861952',
    'rbxassetid://82183356141401','rbxassetid://100592913030351','rbxassetid://121293883585738',
    'rbxassetid://70447634862911','rbxassetid://92173139187970','rbxassetid://106847695270773',
    'rbxassetid://125403313786645','rbxassetid://81639435858902','rbxassetid://137314737492715',
    'rbxassetid://120112897026015','rbxassetid://82113744478546','rbxassetid://118298475669935',
    'rbxassetid://126681776859538','rbxassetid://129976080405072','rbxassetid://109667959938617',
    'rbxassetid://74707328554358','rbxassetid://133336594357903','rbxassetid://86204001129974',
    'rbxassetid://124243639579224','rbxassetid://70371667919898','rbxassetid://131543461321709',
    'rbxassetid://136323728355613','rbxassetid://109230267448394','rbxassetid://139835501033932'
}

-- UI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ForsakenReachGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = Player:WaitForChild("PlayerGui")

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 250, 0, 120)
Frame.Position = UDim2.new(0, 20, 0, 20)
Frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
Frame.BorderSizePixel = 0
Frame.Parent = ScreenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0,10)
UICorner.Parent = Frame

local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0, 200, 0, 40)
ToggleButton.Position = UDim2.new(0,25,0,10)
ToggleButton.BackgroundColor3 = Color3.fromRGB(50,50,50)
ToggleButton.TextColor3 = Color3.fromRGB(255,255,255)
ToggleButton.Text = "Enable Reach: OFF"
ToggleButton.Parent = Frame

ToggleButton.MouseButton1Click:Connect(function()
    ForsakenReachEnabled = not ForsakenReachEnabled
    ToggleButton.Text = "Enable Reach: "..(ForsakenReachEnabled and "ON" or "OFF")
end)

local ReachBox = Instance.new("TextBox")
ReachBox.Size = UDim2.new(0,200,0,40)
ReachBox.Position = UDim2.new(0,25,0,60)
ReachBox.BackgroundColor3 = Color3.fromRGB(50,50,50)
ReachBox.TextColor3 = Color3.fromRGB(255,255,255)
ReachBox.PlaceholderText = "Reach Distance (studs)"
ReachBox.Text = tostring(ReachDistance)
ReachBox.ClearTextOnFocus = false
ReachBox.Parent = Frame

ReachBox.FocusLost:Connect(function()
    local num = tonumber(ReachBox.Text)
    if num then
        ReachDistance = math.max(10,num)
        ReachBox.Text = tostring(ReachDistance)
        print("Reach Distance set to:", ReachDistance)
    end
end)

-- Get nearest target (players + NPCs)
local function getFacingTarget()
    if not HumanoidRootPart then return end
    local nearest
    local dist = ReachDistance 

    -- Players
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= Player and p.Character and p.Character:FindFirstChild("HumanoidRootPart")
            and p.Character:FindFirstChild("Humanoid") and p.Character.Humanoid.Health > 0 then
            local d = (p.Character.HumanoidRootPart.Position - HumanoidRootPart.Position).Magnitude
            if d < dist then
                dist = d
                nearest = p.Character
            end
        end
    end

    -- NPCs
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("Model") and v ~= Character and v:FindFirstChild("HumanoidRootPart")
            and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            local d = (v.HumanoidRootPart.Position - HumanoidRootPart.Position).Magnitude
            if d < dist then
                dist = d
                nearest = v
            end
        end
    end

    return nearest
end

-- Move toward target, predictive aim, face only during attack, AFK fix, pass through walls
local function adjustToTarget(Target)
    while ForsakenReachEnabled and Target and Target:FindFirstChild("HumanoidRootPart") do
        local TargetPos = Target.HumanoidRootPart.Position
        local TargetVel = Target.HumanoidRootPart.Velocity
        local Dist = (TargetPos - HumanoidRootPart.Position).Magnitude

        local PredictedPos
        if Dist < 4 then
            PredictedPos = TargetPos -- AFK/close target
        else
            local PredictionTime = 0.2
            PredictedPos = TargetPos + TargetVel * PredictionTime
        end

        local Direction = PredictedPos - HumanoidRootPart.Position
        local Distance = Direction.Magnitude

        -- Speed capped at 100
        local Speed = math.clamp(Distance * 2, 0, 100)

        local OldVel = HumanoidRootPart.Velocity

        -- Pass through walls
        HumanoidRootPart.CanCollide = false
        HumanoidRootPart.Velocity = Direction.Unit * Speed

        -- Face target only during attack
        local Playing = false
        for _, v in Humanoid:GetPlayingAnimationTracks() do
            if table.find(AttackAnimations, v.Animation.AnimationId) and (v.TimePosition/v.Length < 0.75) then
                Playing = true
                break
            end
        end
        if Playing then
            HumanoidRootPart.CFrame = CFrame.new(HumanoidRootPart.Position, PredictedPos)
        end

        game:GetService("RunService").RenderStepped:Wait()
        HumanoidRootPart.Velocity = OldVel
        HumanoidRootPart.CanCollide = true
        task.wait(0.05)
    end
end

-- Main loop
game:GetService("RunService").Heartbeat:Connect(function()
    if not ForsakenReachEnabled or not HumanoidRootPart then return end
    local Target = getFacingTarget()
    if Target then
        adjustToTarget(Target)
    end
end)
